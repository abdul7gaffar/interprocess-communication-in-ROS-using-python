#!/usr/bin/env python

import rospy
from AR_week4_test.msg import cubic_traj_params,cubic_traj_coeffs
from AR_week4_test.srv import *

def callback(data):
    rospy.loginfo(rospy.get_caller_id() + 'I heard %s',data)
    #create newmesssage of type compute_cubic_traj
    newmessage = compute_cubic_traj()
    # assign individual attributes their values
    newmessage.v0=data.v0
    newmessage.vf=data.vf
    newmessage.p0=data.p0
    newmessage.pf=data.pf
    newmessage.t0=data.t0
    newmessage.tf=data.tf
    print("the  coefficients are")
    cf=compute_traj(newmessage)
    print(cf)
    #send the values to node 4 to plot it via function talktonode4
    talktonode4(cf,newmessage)

def node():

    rospy.init_node('node', anonymous=True)
    #to listen to the random points generated by node 1
    rospy.Subscriber('chatter',cubic_traj_params, callback)

    rospy.spin() # spin() simply keeps python from exiting until this node is stopped

def compute_traj(cubic_traj_params):
    rospy.wait_for_service('cubic_trajectory')
    try:
	#create a new service to compute the coefficients in node 3
	cubic_trajectory = rospy.ServiceProxy('cubic_trajectory', compute_cubic_traj)
	#get the coefficients in resp1
        resp1 = cubic_trajectory(cubic_traj_params.v0,cubic_traj_params.vf,cubic_traj_params.p0,cubic_traj_params.pf,cubic_traj_params.t0,cubic_traj_params.tf)
        print("got values")
        return resp1
    except rospy.ServiceException, e:
        print "Service call failed: %s"%e
def talktonode4(cf,newmessage):
    #to send the values to node 4 create a new topic to publish it on
    pub=rospy.Publisher('tonode4',cubic_traj_coeffs,queue_size=10)
    msg=cubic_traj_coeffs()
    msg.a0=cf.a0
    msg.a1=cf.a1
    msg.a2=cf.a2
    msg.a3=cf.a3
    msg.t0=newmessage.t0
    msg.tf=newmessage.tf
    #publish it on the topic all the coefficients computed
    pub.publish(msg)
if __name__ == '__main__':
    node()
